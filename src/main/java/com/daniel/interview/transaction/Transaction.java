package com.daniel.interview.transaction;

/**
 * Daniel on 2018/10/11.
 *
 * 事务是由一组SQL语句组成的逻辑处理单元
 *
 * 事务(Transaction)及其ACID属性
 *      原子性(Atomicity)：事务是不可分割的最小工作单元,事务内的操作要么全做,要么全不做
 *
 *      一致性(Consistent)：在事务开始和完成时,数据都保持一致状态
 *
 *      隔离性(Isoation)：并发事务执行之间互不影响,在一个事务内部的操作对其他事务不产生影响,这需要事务隔离级别来指定隔离性
 *
 *      持久性(Durabe)：事务一旦执行成功,它对数据库的数据的改变必须是永久的,不会因比如遇到系统故障或断电造成数据不一致或丢失
 *
 * 典型场景 银行转账业务
 *
 * 本地事务与分布式事务
 *      柔性事务就是一个完整事务需要跨物理介质或跨物理节点（网络通讯）,那么排它锁、共享锁等等就没有用武之地了（这里并不是指大事务拆小事务【本地事务】后）,无法保证原子性（Atomicity）完成事务。个人理解分布式（柔性）事务本质意义上就是-伪事务,柔性事务其实就是根据不同的业务场景使用不同的方法实现最终一致性,因为可以根据业务的特性做部分取舍,在业务过程中可以容忍一定时间内的数据不一致
 */
public class Transaction {
}
